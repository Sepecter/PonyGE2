<program>::=<templateDeclaration>|<templateDeclaration> <program>
<templateDeclaration>::=<Template> <Less> <templateparameterList> <Greater> <simpleDeclaration>
<simpleDeclaration>::=<declSpecifierSeq> <Semi>
<declSpecifierSeq>::=<declSpecifier> <declSpecifierSeq>|<declSpecifier>
<declSpecifier>::=<Typedef>|<typeSpecifier>
<(_Comma_templateParameter_)>::=<Comma> <typeParameter>
<(_Comma_templateParameter_)_star>::=" "|<(_Comma_templateParameter_)> <(_Comma_templateParameter_)_star>
<templateparameterList>::=<typeParameter> <(_Comma_templateParameter_)_star>
<(_Template_Less_templateparameterList_Greater_)>::=<Template> <Less> <templateparameterList> <Greater>
<(_Template_Less_templateparameterList_Greater_)_question>::=" "|<(_Template_Less_templateparameterList_Greater_)>
<Ellipsis_question>::=" "|<Ellipsis>
<Identifier_question>::=" "|Identifier
<typeParameter>::=<Typename_> <Identifier_question> <Assign> <theTypeId>|<Typename_> <Ellipsis_question> <Identifier_question>|<(_Template_Less_templateparameterList_Greater_)_question> <Class> <Identifier_question> <Assign> <theTypeId>|<(_Template_Less_templateparameterList_Greater_)_question> <Class> <Ellipsis_question> <Identifier_question>
<templateArgumentList_question>::=" "|<templateArgumentList>
<simpleTemplateId>::=Identifier <Less> <templateArgumentList_question> <Greater>
<templateId>::=<operatorFunctionId> <Less> <templateArgumentList_question> <Greater>|<simpleTemplateId>
<(_Comma_templateArgument_Ellipsis_question_)>::=<Comma> <templateArgument> <Ellipsis_question>
<(_Comma_templateArgument_Ellipsis_question_)_star>::=" "|<(_Comma_templateArgument_Ellipsis_question_)> <(_Comma_templateArgument_Ellipsis_question_)_star>
<templateArgumentList>::=<templateArgument> <Ellipsis_question> <(_Comma_templateArgument_Ellipsis_question_)_star>
<templateArgument>::=<idExpression>|<theTypeId>
<theTypeId>::=<typeSpecifierSeq>
<typeSpecifier_plus>::=<typeSpecifier>|<typeSpecifier> <typeSpecifier_plus>
<attributeSpecifierSeq_question>::=" "|<attributeSpecifierSeq>
<typeSpecifierSeq>::=<typeSpecifier_plus>
<typeSpecifier>::=<classSpecifier>|<trailingTypeSpecifier>
<trailingTypeSpecifier>::=<typeNameSpecifier>|<simpleTypeSpecifier>
<nestedNameSpecifier_question>::=" "|<nestedNameSpecifier>
<simpleTypeSpecifier>::=<Auto>|<Void>|<Int>|<nestedNameSpecifier_question> <theTypeName>
<(_theTypeName_|_namespaceName_)>::=<namespaceName>|<theTypeName>
<namespaceName>::=<namespaceAlias>|<originalNamespaceName>
<originalNamespaceName>::=Identifier
<namespaceAlias>::=Identifier
<(_theTypeName_|_namespaceName_)_question>::=" "|<(_theTypeName_|_namespaceName_)>
<Template_question>::=" "|<Template>
<nestedNameSpecifier>::=<nestedNameSpecifier> <Template_question> <simpleTemplateId> <Doublecolon>|<nestedNameSpecifier> Identifier <Doublecolon>|<(_theTypeName_|_namespaceName_)_question> <Doublecolon> <Doublecolon>
<theTypeName>::=<simpleTemplateId>|<className>
<typeNameSpecifier>::=<Typename_> <nestedNameSpecifier> <Template_question> <simpleTemplateId>|<Typename_> <nestedNameSpecifier> Identifier
<attributeSpecifier_plus>::=<attributeSpecifier>|<attributeSpecifier> <attributeSpecifier_plus>
<attributeSpecifierSeq>::=<attributeSpecifier_plus>
<attributeList_question>::=" "|<attributeList>
<attributeSpecifier>::=<alignmentspecifier>|<LeftBracket> <LeftBracket> <attributeList_question> <RightBracket> <RightBracket>
<alignmentspecifier>::=<Alignas> <LeftParen> <theTypeId> <Ellipsis_question> <RightParen>
<(_Comma_attribute_)>::=<Comma> <attribute>
<(_Comma_attribute_)_star>::=" "|<(_Comma_attribute_)> <(_Comma_attribute_)_star>
<attributeList>::=<attribute> <(_Comma_attribute_)_star> <Ellipsis_question>
<(_attributeNamespace_Doublecolon_)>::=<attributeNamespace> <Doublecolon>
<(_attributeNamespace_Doublecolon_)_question>::=" "|<(_attributeNamespace_Doublecolon_)>
<attributeArgumentClause_question>::=" "|<attributeArgumentClause>
<attribute>::=<(_attributeNamespace_Doublecolon_)_question> Identifier <attributeArgumentClause_question>
<attributeNamespace>::=Identifier
<balancedTokenSeq_question>::=" "|<balancedTokenSeq>
<attributeArgumentClause>::=<LeftParen> <balancedTokenSeq_question> <RightParen>
<balancedtoken_plus>::=<balancedtoken>|<balancedtoken> <balancedtoken_plus>
<balancedTokenSeq>::=<balancedtoken_plus>
<(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)>::=<RightBracket>|<LeftBracket>|<RightBrace>|<LeftBrace>|<RightParen>|<LeftParen>
<(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)_plus>::=<(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)>|<(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)> <(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)_plus>
<balancedtoken>::=<~> <(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)_plus>|<LeftBrace> <balancedTokenSeq> <RightBrace>|<LeftBracket> <balancedTokenSeq> <RightBracket>|<LeftParen> <balancedTokenSeq> <RightParen>
<operatorFunctionId>::=<Operator> <theOperator>
<(_LeftBracket_RightBracket_)>::=<LeftBracket> <RightBracket>
<(_LeftBracket_RightBracket_)_question>::=" "|<(_LeftBracket_RightBracket_)>
<theOperator>::=<LeftBracket> <RightBracket>|<LeftParen> <RightParen>|<Arrow>|<ArrowStar>|<Comma>|<PlusPlus>|<OrOr>|<AndAnd>|<LessEqual>|<NotEqual>|<Equal>|<LeftShiftAssign>|<RightShiftAssign>|<Greater> <Greater>|<Less> <Less>|<OrAssign>|<AndAssign>|<XorAssign>|<ModAssign>|<StarAssign>|<PlusAssign>|<GreaterEqual>|<Less>|<Greater>|<Assign>|<Not>|<Tilde>|<Or>|<And>|<Caret>|<Div>|<Star>|<Plus>|<Delete> <(_LeftBracket_RightBracket_)_question>|<New> <(_LeftBracket_RightBracket_)_question>
<idExpression>::=<qualifiedId>|<unqualifiedId>
<unqualifiedId>::=<templateId>|<operatorFunctionId>|Identifier
<qualifiedId>::=<nestedNameSpecifier> <Template_question> <unqualifiedId>
<className>::=<simpleTemplateId>|Identifier
<classSpecifier>::=<classHead> <LeftBrace> <RightBrace>
<classVirtSpecifier_question>::=" "|<classVirtSpecifier>
<(_classHeadName_classVirtSpecifier_question_)>::=<classHeadName> <classVirtSpecifier_question>
<(_classHeadName_classVirtSpecifier_question_)_question>::=" "|<(_classHeadName_classVirtSpecifier_question_)>
<classHead>::=<Union> <attributeSpecifierSeq_question> <(_classHeadName_classVirtSpecifier_question_)_question>|<classKey> <attributeSpecifierSeq_question> <(_classHeadName_classVirtSpecifier_question_)_question>
<classHeadName>::=<nestedNameSpecifier_question> <className>
<classVirtSpecifier>::=<Final>
<classKey>::=<Struct>|<Class>
<Alignas>::="alignas"
<Auto>::="auto"
<Class>::="class"
<Delete>::="delete"
<Final>::="final"
<Int>::="int"
<New>::="new"
<Operator>::="operator"
<Struct>::="struct"
<Template>::="template"
<Typedef>::="typedef"
<Typename_>::="typename"
<Union>::="union"
<Void>::="void"
<LeftParen>::="("
<RightParen>::=")"
<LeftBracket>::="["
<RightBracket>::="]"
<LeftBrace>::="{"
<RightBrace>::="}"
<Plus>::="+"
<Star>::="*"
<Div>::="/"
<Caret>::="^"
<And>::="&"
<Or>::="|"
<Tilde>::="~"
<Not>::="!"
<Assign>::="="
<Less>::="<"
<Greater>::=">"
<PlusAssign>::="+="
<StarAssign>::="*="
<ModAssign>::="%="
<XorAssign>::="^="
<AndAssign>::="&="
<OrAssign>::="|="
<LeftShiftAssign>::="<<="
<RightShiftAssign>::=">>="
<Equal>::="=="
<NotEqual>::="!="
<LessEqual>::="<="
<GreaterEqual>::=">="
<AndAnd>::="&&"
<OrOr>::="||"
<PlusPlus>::="++"
<Comma>::=","
<ArrowStar>::="->*"
<Arrow>::="->"
<Doublecolon>::="::"
<Semi>::=";"
<Ellipsis>::="..."