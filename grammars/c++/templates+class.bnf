<templateDeclaration>::=<Template> <Less> <templateparameterList> <Greater> <declaration>
<(_Comma_templateParameter_)>::=<Comma> <templateParameter>
<(_Comma_templateParameter_)_star>::=" "|<(_Comma_templateParameter_)> <(_Comma_templateParameter_)_star>
<templateparameterList>::=<templateParameter> <(_Comma_templateParameter_)_star>
<templateParameter>::=<typeParameter>
<(_Template_Less_templateparameterList_Greater_)>::=<Template> <Less> <templateparameterList> <Greater>
<(_Template_Less_templateparameterList_Greater_)_question>::=" "|<(_Template_Less_templateparameterList_Greater_)>
<Ellipsis_question>::=" "|<Ellipsis>
<Identifier_question>::=" "|<Identifier>
<typeParameter>::=<Typename_> <Identifier_question> <Assign> <theTypeId>|<Typename_> <Ellipsis_question> <Identifier_question>|<(_Template_Less_templateparameterList_Greater_)_question> <Class> <Identifier_question> <Assign> <theTypeId>|<(_Template_Less_templateparameterList_Greater_)_question> <Class> <Ellipsis_question> <Identifier_question>
<templateArgumentList_question>::=" "|<templateArgumentList>
<simpleTemplateId>::=<templateName> <Less> <templateArgumentList_question> <Greater>
<templateId>::=<operatorFunctionId> <Less> <templateArgumentList_question> <Greater>|<simpleTemplateId>
<templateName>::=<Identifier>
<(_Comma_templateArgument_Ellipsis_question_)>::=<Comma> <templateArgument> <Ellipsis_question>
<(_Comma_templateArgument_Ellipsis_question_)_star>::=" "|<(_Comma_templateArgument_Ellipsis_question_)> <(_Comma_templateArgument_Ellipsis_question_)_star>
<templateArgumentList>::=<templateArgument> <Ellipsis_question> <(_Comma_templateArgument_Ellipsis_question_)_star>
<templateArgument>::=<idExpression>|<theTypeId>
<theTypeId>::=<typeSpecifierSeq>
<typeSpecifier_plus>::=<typeSpecifier>|<typeSpecifier> <typeSpecifier_plus>
<attributeSpecifierSeq_question>::=" "|<attributeSpecifierSeq>
<typeSpecifierSeq>::=<typeSpecifier_plus> <attributeSpecifierSeq_question>
<typeSpecifier>::=<classSpecifier>|<trailingTypeSpecifier>
<trailingTypeSpecifier>::=<cvQualifier>|<typeNameSpecifier>|<simpleTypeSpecifier>
<nestedNameSpecifier_question>::=" "|<nestedNameSpecifier>
<simpleTypeSpecifier>::=<Auto>|<Void>|<Double>|<Int>|<nestedNameSpecifier> <Template> <simpleTemplateId>|<nestedNameSpecifier_question> <theTypeName>
<(_theTypeName_|_namespaceName_)>::=<namespaceName>|<theTypeName>
<(_theTypeName_|_namespaceName_)_question>::=" "|<(_theTypeName_|_namespaceName_)>
<Template_question>::=" "|<Template>
<nestedNameSpecifier>::=<nestedNameSpecifier> <Template_question> <simpleTemplateId> <Doublecolon>|<nestedNameSpecifier> <Identifier> <Doublecolon>|<(_theTypeName_|_namespaceName_)_question> <Doublecolon> <Doublecolon>
<theTypeName>::=<simpleTemplateId>|<typedefName>|<className>
<typedefName>::=<Identifier>
<typeNameSpecifier>::=<Typename_> <nestedNameSpecifier> <Template_question> <simpleTemplateId>|<Typename_> <nestedNameSpecifier> <Identifier>
<cvQualifier>::=<Volatile>|<Const>
<attributeSpecifier_plus>::=<attributeSpecifier>|<attributeSpecifier> <attributeSpecifier_plus>
<attributeSpecifierSeq>::=<attributeSpecifier_plus>
<attributeList_question>::=" "|<attributeList>
<attributeSpecifier>::=<alignmentspecifier>|<LeftBracket> <LeftBracket> <attributeList_question> <RightBracket> <RightBracket>
<alignmentspecifier>::=<Alignas> <LeftParen> <theTypeId> <Ellipsis_question> <RightParen>
<(_Comma_attribute_)>::=<Comma> <attribute>
<(_Comma_attribute_)_star>::=" "|<(_Comma_attribute_)> <(_Comma_attribute_)_star>
<attributeList>::=<attribute> <(_Comma_attribute_)_star> <Ellipsis_question>
<(_attributeNamespace_Doublecolon_)>::=<attributeNamespace> <Doublecolon>
<(_attributeNamespace_Doublecolon_)_question>::=" "|<(_attributeNamespace_Doublecolon_)>
<attributeArgumentClause_question>::=" "|<attributeArgumentClause>
<attribute>::=<(_attributeNamespace_Doublecolon_)_question> <Identifier> <attributeArgumentClause_question>
<attributeNamespace>::=<Identifier>
<balancedTokenSeq_question>::=" "|<balancedTokenSeq>
<attributeArgumentClause>::=<LeftParen> <balancedTokenSeq_question> <RightParen>
<balancedtoken_plus>::=<balancedtoken>|<balancedtoken> <balancedtoken_plus>
<balancedTokenSeq>::=<balancedtoken_plus>
<(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)>::=<RightBracket>|<LeftBracket>|<RightBrace>|<LeftBrace>|<RightParen>|<LeftParen>
<(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)_plus>::=<(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)>|<(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)> <(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)_plus>
<balancedtoken>::=<~> <(_LeftParen_|_RightParen_|_LeftBrace_|_RightBrace_|_LeftBracket_|_RightBracket_)_plus>|<LeftBrace> <balancedTokenSeq> <RightBrace>|<LeftBracket> <balancedTokenSeq> <RightBracket>|<LeftParen> <balancedTokenSeq> <RightParen>
<operatorFunctionId>::=<Operator> <theOperator>
<(_LeftBracket_RightBracket_)>::=<LeftBracket> <RightBracket>
<(_LeftBracket_RightBracket_)_question>::=" "|<(_LeftBracket_RightBracket_)>
<theOperator>::=<LeftBracket> <RightBracket>|<LeftParen> <RightParen>|<Arrow>|<ArrowStar>|<Comma>|<PlusPlus>|<OrOr>|<AndAnd>|<LessEqual>|<NotEqual>|<Equal>|<LeftShiftAssign>|<RightShiftAssign>|<Greater> <Greater>|<Less> <Less>|<OrAssign>|<AndAssign>|<XorAssign>|<ModAssign>|<StarAssign>|<PlusAssign>|<GreaterEqual>|<Less>|<Greater>|<Assign>|<Not>|<Tilde>|<Or>|<And>|<Caret>|<Div>|<Star>|<Plus>|<Delete> <(_LeftBracket_RightBracket_)_question>|<New> <(_LeftBracket_RightBracket_)_question>
<idExpression>::=<qualifiedId>|<unqualifiedId>
<unqualifiedId>::=<templateId>|<operatorFunctionId>|<Identifier>
<qualifiedId>::=<nestedNameSpecifier> <Template_question> <unqualifiedId>
<className>::=<simpleTemplateId>|<Identifier>
<memberSpecification_question>::=" "|<memberSpecification>
<classSpecifier>::=<classHead> <LeftBrace> <memberSpecification_question> <RightBrace>
<classVirtSpecifier_question>::=" "|<classVirtSpecifier>
<(_classHeadName_classVirtSpecifier_question_)>::=<classHeadName> <classVirtSpecifier_question>
<(_classHeadName_classVirtSpecifier_question_)_question>::=" "|<(_classHeadName_classVirtSpecifier_question_)>
<classHead>::=<Union> <attributeSpecifierSeq_question> <(_classHeadName_classVirtSpecifier_question_)_question>|<classKey> <attributeSpecifierSeq_question> <(_classHeadName_classVirtSpecifier_question_)_question>
<classHeadName>::=<nestedNameSpecifier_question> <className>
<classVirtSpecifier>::=<Final>
<classKey>::=<Struct>|<Class>
<Alignas>::="alignas"
<Alignof>::="alignof"
<Asm>::="asm"
<Auto>::="auto"
<Bool>::="bool"
<Break>::="break"
<Case>::="case"
<Catch>::="catch"
<Char>::="char"
<Char16>::="char16_t"
<Char32>::="char32_t"
<Class>::="class"
<Const>::="const"
<Constexpr>::="constexpr"
<Const_cast>::="const_cast"
<Continue>::="continue"
<Decltype>::="decltype"
<Default>::="default"
<Delete>::="delete"
<Do>::="do"
<Double>::="double"
<Dynamic_cast>::="dynamic_cast"
<Else>::="else"
<Enum>::="enum"
<Explicit>::="explicit"
<Export>::="export"
<Extern>::="extern"
<False_>::="false"
<Final>::="final"
<Float>::="float"
<For>::="for"
<Friend>::="friend"
<Goto>::="goto"
<If>::="if"
<Inline>::="inline"
<Int>::="int"
<Long>::="long"
<Mutable>::="mutable"
<Namespace>::="namespace"
<New>::="new"
<Noexcept>::="noexcept"
<Nullptr>::="nullptr"
<Operator>::="operator"
<Override>::="override"
<Private>::="private"
<Protected>::="protected"
<Public>::="public"
<Register>::="register"
<Reinterpret_cast>::="reinterpret_cast"
<Return>::="return"
<Short>::="short"
<Signed>::="signed"
<Sizeof>::="sizeof"
<Static>::="static"
<Static_assert>::="static_assert"
<Static_cast>::="static_cast"
<Struct>::="struct"
<Switch>::="switch"
<Template>::="template"
<This>::="this"
<Thread_local>::="thread_local"
<Throw>::="throw"
<True_>::="true"
<Try>::="try"
<Typedef>::="typedef"
<Typeid_>::="typeid"
<Typename_>::="typename"
<Union>::="union"
<Unsigned>::="unsigned"
<Using>::="using"
<Virtual>::="virtual"
<Void>::="void"
<Volatile>::="volatile"
<Wchar>::="wchar_t"
<While>::="while"
<LeftParen>::="("
<RightParen>::=")"
<LeftBracket>::="["
<RightBracket>::="]"
<LeftBrace>::="{"
<RightBrace>::="}"
<Plus>::="+"
<Minus>::="-"
<Star>::="*"
<Div>::="/"
<Mod>::="%"
<Caret>::="^"
<And>::="&"
<Or>::="|"
<Tilde>::="~"
<Not>::="!"
<Assign>::="="
<Less>::="<"
<Greater>::=">"
<PlusAssign>::="+="
<MinusAssign>::="-="
<StarAssign>::="*="
<DivAssign>::="/="
<ModAssign>::="%="
<XorAssign>::="^="
<AndAssign>::="&="
<OrAssign>::="|="
<LeftShiftAssign>::="<<="
<RightShiftAssign>::=">>="
<Equal>::="=="
<NotEqual>::="!="
<LessEqual>::="<="
<GreaterEqual>::=">="
<AndAnd>::="&&"
<OrOr>::="||"
<PlusPlus>::="++"
<MinusMinus>::="--"
<Comma>::=","
<ArrowStar>::="->*"
<Arrow>::="->"
<Question>::="?"
<Colon>::=":"
<Doublecolon>::="::"
<Semi>::=";"
<Dot>::="."
<DotStar>::=".*"
<Ellipsis>::="..."
