<templateDeclaration>::=<Template> <Less> <templateparameterList> <Greater> <functionDefinition>
<Lbr_Comma_templateParameter_Rbr>::=<Comma> <templateParameter>
<Lbr_Comma_templateParameter_Rbr_star>::=" "|<Lbr_Comma_templateParameter_Rbr> <Lbr_Comma_templateParameter_Rbr_star>
<templateparameterList>::=<templateParameter> <Lbr_Comma_templateParameter_Rbr_star>
<templateParameter>::=<typeParameter>
<Lbr_Template_Less_templateparameterList_Greater_Rbr>::=<Template> <Less> <templateparameterList> <Greater>
<Lbr_Template_Less_templateparameterList_Greater_Rbr_question>::=" "|<Lbr_Template_Less_templateparameterList_Greater_Rbr>
<Ellipsis_question>::=" "|<Ellipsis>
<Identifier_question>::=" "|Identifier
<typeParameter>::=<Typename_> <Identifier_question> <Assign> <theTypeId>|<Typename_> <Ellipsis_question> <Identifier_question>|<Lbr_Template_Less_templateparameterList_Greater_Rbr_question> <Class> <Identifier_question> <Assign> <theTypeId>|<Lbr_Template_Less_templateparameterList_Greater_Rbr_question> <Class> <Ellipsis_question> <Identifier_question>
<templateArgumentList_question>::=" "|<templateArgumentList>
<simpleTemplateId>::=<templateName> <Less> <templateArgumentList_question> <Greater>
<templateId>::=<operatorFunctionId> <Less> <templateArgumentList_question> <Greater>|<simpleTemplateId>
<templateName>::=Identifier
<Lbr_Comma_templateArgument_Ellipsis_question_Rbr>::=<Comma> <templateArgument> <Ellipsis_question>
<Lbr_Comma_templateArgument_Ellipsis_question_Rbr_star>::=" "|<Lbr_Comma_templateArgument_Ellipsis_question_Rbr> <Lbr_Comma_templateArgument_Ellipsis_question_Rbr_star>
<templateArgumentList>::=<templateArgument> <Ellipsis_question> <Lbr_Comma_templateArgument_Ellipsis_question_Rbr_star>
<templateArgument>::=<idExpression>|<theTypeId>
<typeSpecifier_plus>::=<typeSpecifier>|<typeSpecifier> <typeSpecifier_plus>
<attributeSpecifierSeq_question>::=" "|<attributeSpecifierSeq>
<typeSpecifierSeq>::=<typeSpecifier_plus> <attributeSpecifierSeq_question>
<typeSpecifier>::=<trailingTypeSpecifier>
<trailingTypeSpecifier>::=<cvQualifier>|<typeNameSpecifier>|<simpleTypeSpecifier>
<nestedNameSpecifier_question>::=" "|<nestedNameSpecifier>
<simpleTypeSpecifier>::=<Auto>|<Void>|<Double>|<Int>|<nestedNameSpecifier> <Template> <simpleTemplateId>|<nestedNameSpecifier_question> <theTypeName>
<Lbr_theTypeName_OR_namespaceName_Rbr>::=Identifier|<theTypeName>
<Lbr_theTypeName_OR_namespaceName_Rbr_question>::=" "|<Lbr_theTypeName_OR_namespaceName_Rbr>
<Template_question>::=" "|<Template>
<nestedNameSpecifier>::=<nestedNameSpecifier> <Template_question> <simpleTemplateId> <Doublecolon>|<nestedNameSpecifier> Identifier <Doublecolon>|<Lbr_theTypeName_OR_namespaceName_Rbr_question> <Doublecolon> <Doublecolon>
<theTypeName>::=<simpleTemplateId>|<typedefName>|Identifier
<typedefName>::=Identifier
<typeNameSpecifier>::=<Typename_> <nestedNameSpecifier> <Template_question> <simpleTemplateId>|<Typename_> <nestedNameSpecifier> Identifier
<attributeSpecifier_plus>::=<attributeSpecifier>|<attributeSpecifier> <attributeSpecifier_plus>
<attributeSpecifierSeq>::=<attributeSpecifier_plus>
<attributeList_question>::=" "|<attributeList>
<attributeSpecifier>::=<alignmentspecifier>|<LeftBracket> <LeftBracket> <attributeList_question> <RightBracket> <RightBracket>
<alignmentspecifier>::=<Alignas> <LeftParen> <theTypeId> <Ellipsis_question> <RightParen>
<Lbr_Comma_attribute_Rbr>::=<Comma> <attribute>
<Lbr_Comma_attribute_Rbr_star>::=" "|<Lbr_Comma_attribute_Rbr> <Lbr_Comma_attribute_Rbr_star>
<attributeList>::=<attribute> <Lbr_Comma_attribute_Rbr_star> <Ellipsis_question>
<Lbr_attributeNamespace_Doublecolon_Rbr>::=<attributeNamespace> <Doublecolon>
<Lbr_attributeNamespace_Doublecolon_Rbr_question>::=" "|<Lbr_attributeNamespace_Doublecolon_Rbr>
<attributeArgumentClause_question>::=" "|<attributeArgumentClause>
<attribute>::=<Lbr_attributeNamespace_Doublecolon_Rbr_question> Identifier <attributeArgumentClause_question>
<attributeNamespace>::=Identifier
<balancedTokenSeq_question>::=" "|<balancedTokenSeq>
<attributeArgumentClause>::=<LeftParen> <balancedTokenSeq_question> <RightParen>
<balancedtoken_star>::=" "|<balancedtoken> <balancedtoken_star>
<balancedTokenSeq>::=<balancedtoken_star>
<balancedtoken>::=<LeftBrace> <balancedTokenSeq> <RightBrace>|<LeftBracket> <balancedTokenSeq> <RightBracket>|<LeftParen> <balancedTokenSeq> <RightParen>
<operatorFunctionId>::=<Operator> <theOperator>
<Lbr_LeftBracket_RightBracket_Rbr>::=<LeftBracket> <RightBracket>
<Lbr_LeftBracket_RightBracket_Rbr_question>::=" "|<Lbr_LeftBracket_RightBracket_Rbr>
<theOperator>::=<LeftBracket> <RightBracket>|<LeftParen> <RightParen>|<Arrow>|<ArrowStar>|<Comma>|<PlusPlus>|<OrOr>|<Equal>|<LeftShiftAssign>|<Greater> <Greater>|<OrAssign>|<PlusAssign>|<Greater>|<Assign>|<Or>|<Star>|<Plus>|<Delete> <Lbr_LeftBracket_RightBracket_Rbr_question>|<New> <Lbr_LeftBracket_RightBracket_Rbr_question>
<idExpression>::=<qualifiedId>|<unqualifiedId>
<unqualifiedId>::=<templateId>|<operatorFunctionId>|Identifier
<qualifiedId>::=<nestedNameSpecifier> <Template_question> <unqualifiedId>
<declSpecifierSeq_question>::=" "|<declSpecifierSeq>
<functionDefinition>::=<attributeSpecifierSeq_question> <declSpecifierSeq_question> <declarator> <LeftBrace> <RightBrace>
<declSpecifier>::=<Constexpr>|<Typedef>|<Friend>|<functionSpecifier>|<typeSpecifier>|<storageClassSpecifier>
<declSpecifier_plus>::=<declSpecifier>|<declSpecifier> <declSpecifier_plus>
<declSpecifierSeq>::=<declSpecifier_plus> <attributeSpecifierSeq_question>
<storageClassSpecifier>::=<Mutable>|<Extern>|<Static>|<Register>
<functionSpecifier>::=<Explicit>|<Virtual>|<Inline>
<declarator>::=<noPointerDeclarator> <parametersAndQualifiers> <trailingReturnType>|<noPointerDeclarator>
<noPointerDeclarator>::=<LeftParen> <noPointerDeclarator> <RightParen>|<noPointerDeclarator> <LeftBracket> <RightBracket> <attributeSpecifierSeq_question>|<noPointerDeclarator> <parametersAndQualifiers>|<declaratorid> <attributeSpecifierSeq_question>
<parameterDeclarationClause_question>::=" "|<parameterDeclarationClause>
<cvqualifierseq_question>::=" "|<cvqualifierseq>
<refqualifier_question>::=" "|<refqualifier>
<parametersAndQualifiers>::=<LeftParen> <parameterDeclarationClause_question> <RightParen> <cvqualifierseq_question> <refqualifier_question> <attributeSpecifierSeq_question>
<abstractDeclarator_question>::=" "|<abstractDeclarator>
<trailingReturnType>::=<Arrow> <trailingTypeSpecifierSeq> <abstractDeclarator_question>
<trailingTypeSpecifier_plus>::=<trailingTypeSpecifier>|<trailingTypeSpecifier> <trailingTypeSpecifier_plus>
<trailingTypeSpecifierSeq>::=<trailingTypeSpecifier_plus> <attributeSpecifierSeq_question>
<pointerOperator>::=<nestedNameSpecifier_question> <Star> <attributeSpecifierSeq_question> <cvqualifierseq_question>|<AndAnd> <attributeSpecifierSeq_question>|<And> <attributeSpecifierSeq_question>
<cvQualifier_plus>::=<cvQualifier>|<cvQualifier> <cvQualifier_plus>
<cvqualifierseq>::=<cvQualifier_plus>
<cvQualifier>::=<Volatile>|<Const>
<refqualifier>::=<AndAnd>|<And>
<declaratorid>::=<Ellipsis_question> <idExpression>
<theTypeId>::=<typeSpecifierSeq> <abstractDeclarator_question>
<noPointerAbstractDeclarator_question>::=" "|<noPointerAbstractDeclarator>
<abstractDeclarator>::=<abstractPackDeclarator>|<noPointerAbstractDeclarator_question> <parametersAndQualifiers> <trailingReturnType>|<pointerAbstractDeclarator>
<pointerOperator_plus>::=<pointerOperator>|<pointerOperator> <pointerOperator_plus>
<pointerAbstractDeclarator>::=<pointerOperator_plus> <noPointerAbstractDeclarator_question>|<noPointerAbstractDeclarator>
<noPointerAbstractDeclarator>::=<LeftParen> <pointerAbstractDeclarator> <RightParen>|<LeftBracket> <RightBracket> <attributeSpecifierSeq_question>|<parametersAndQualifiers>|<noPointerAbstractDeclarator> <noPointerAbstractDeclarator> <LeftBracket> <RightBracket> <attributeSpecifierSeq_question>|<noPointerAbstractDeclarator> <parametersAndQualifiers>
<pointerOperator_star>::=" "|<pointerOperator> <pointerOperator_star>
<abstractPackDeclarator>::=<pointerOperator_star> <noPointerAbstractPackDeclarator>
<noPointerAbstractPackDeclarator>::=<Ellipsis>|<noPointerAbstractPackDeclarator> <LeftBracket> <RightBracket> <attributeSpecifierSeq_question>|<noPointerAbstractPackDeclarator> <parametersAndQualifiers>
<Comma_question>::=" "|<Comma>
<Lbr_Comma_question_Ellipsis_Rbr>::=<Comma_question> <Ellipsis>
<Lbr_Comma_question_Ellipsis_Rbr_question>::=" "|<Lbr_Comma_question_Ellipsis_Rbr>
<parameterDeclarationClause>::=<parameterDeclarationList> <Lbr_Comma_question_Ellipsis_Rbr_question>
<Lbr_Comma_parameterDeclaration_Rbr>::=<Comma> <parameterDeclaration>
<Lbr_Comma_parameterDeclaration_Rbr_star>::=" "|<Lbr_Comma_parameterDeclaration_Rbr> <Lbr_Comma_parameterDeclaration_Rbr_star>
<parameterDeclarationList>::=<parameterDeclaration> <Lbr_Comma_parameterDeclaration_Rbr_star>
<Lbr_Assign_initializerClause_Rbr>::=<Assign> <LeftBrace> <RightBrace>
<Lbr_Assign_initializerClause_Rbr_question>::=" "|<Lbr_Assign_initializerClause_Rbr>
<parameterDeclaration>::=<attributeSpecifierSeq_question> <declSpecifierSeq> <abstractDeclarator_question> <Lbr_Assign_initializerClause_Rbr_question>|<attributeSpecifierSeq_question> <declSpecifierSeq> <declarator> <Lbr_Assign_initializerClause_Rbr_question>
<Alignas>::="alignas"
<Auto>::="auto"
<Class>::="class"
<Delete>::="delete"
<Int>::="int"
<New>::="new"
<Operator>::="operator"
<Template>::="template"
<Typename_>::="typename"
<Void>::="void"
<LeftParen>::="("
<RightParen>::=")"
<LeftBracket>::="["
<RightBracket>::="]"
<LeftBrace>::="{"
<RightBrace>::="}"
<Plus>::="+"
<Star>::="*"
<And>::="&"
<Or>::="|"
<Assign>::="="
<Less>::="<"
<Greater>::=">"
<PlusAssign>::="+="
<OrAssign>::="|="
<LeftShiftAssign>::="<<="
<Equal>::="=="
<AndAnd>::="&&"
<OrOr>::="||"
<PlusPlus>::="++"
<Comma>::=","
<ArrowStar>::="->*"
<Arrow>::="->"
<Doublecolon>::="::"
<Ellipsis>::="..."
<Const>::="const"
<Volatile>::="volatile"
<Typedef>::="typedef"
<Explicit>::="explicit"
<Extern>::="extern"
<Static>::="static"
<Friend>::="friend"
<Inline>::="inline"
<Virtual>::="virtual"
<Double>::="double"
<Constexpr>::="constexpr"
<Mutable>::="mutable"
<Register>::="register"